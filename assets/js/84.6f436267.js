(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{460:function(t,e,a){"use strict";a.r(e);var s=a(51),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"ontop-with-teiid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ontop-with-teiid"}},[t._v("#")]),t._v(" Ontop with Teiid")]),t._v(" "),a("p",[t._v("In this tutorial, we present how to use Teiid as a federator for Ontop. We provides two options:")]),t._v(" "),a("ul",[a("li",[t._v("Option 1: Using Docker-compose (recommended)")]),t._v(" "),a("li",[t._v("Option 2: Manual set up")])]),t._v(" "),a("h2",{attrs:{id:"option-1-using-docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option-1-using-docker-compose"}},[t._v("#")]),t._v(" Option 1: Using Docker-compose")]),t._v(" "),a("h3",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.docker.com/get-docker/",target:"_blank",rel:"noopener"}},[t._v("Docker"),a("OutboundLink")],1),t._v(", version 17.09.0 or higher")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener"}},[t._v("Docker Compose"),a("OutboundLink")],1),t._v(", version 1.17.0 or higher")])]),t._v(" "),a("h3",{attrs:{id:"steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[t._v("#")]),t._v(" Steps")]),t._v(" "),a("ol",[a("li",[t._v("Download the code and cd to the directory of the teiid demo")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/ontop/ontop-tutorial/\n$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ontop-tutorial/federation/teiid\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("to start the prototype, downloading / building the required images and containers if needed")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker-compose up\n")])])]),a("p",[t._v("(note: may add option "),a("code",[t._v("-d")]),t._v(" to run in background, in which case logs are not be displayed to standard output but are still accessible via "),a("code",[t._v("docker-compose logs")]),t._v(")")]),t._v(" "),a("p",[a("strong",[t._v("Services")]),t._v(" When running, the prototype exposes the following services:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("a PostgreSQL server with the sample data, with connection information defined in the "),a("code",[t._v(".env")]),t._v(" file.")])]),t._v(" "),a("li",[a("p",[t._v("a Web portal of the SPARQL endpoint backed by ontop at URL "),a("a",{attrs:{href:"http://localhost:8880/",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8880/"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[t._v("a SPARQL endpoint backed by ontop at URL "),a("a",{attrs:{href:"http://localhost:8880/sparql",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8880/sparql"),a("OutboundLink")],1),t._v(".")])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("to stop the prototype, if running")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker-compose down\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("to stop the prototype, if running, and also clean any image / container / data associating to it (useful for cleaning up)")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker-compose down --volumes --remove-orphans\n")])])]),a("p",[t._v("(note: the above command does not remove Docker images that may result being unused after stopping and removing this prototype containers; to remove such images, add option "),a("code",[t._v("--rmi all")]),t._v(")")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("to check the status of the containers forming the prototype")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker-compose ps\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("to check the logs of specific container(s) or of all containers (if no container name is supplied)")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("docker-compose logs <container name 1> ... <contaner name N>\n")])])]),a("h2",{attrs:{id:"option-2-manual-set-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#option-2-manual-set-up"}},[t._v("#")]),t._v(" Option 2: Manual set up")]),t._v(" "),a("p",[t._v("In this tutorial, we present step-by-step way of connecting Teiid to Ontop. We show how to integrate "),a("em",[t._v("uni1")]),t._v(" data stored in a MySQL DB and "),a("em",[t._v("uni2")]),t._v(" data stored in a PostgreSQL DB into one Teiid virtual database, and access these two data sources using Ontop in a uniform way.")]),t._v(" "),a("h3",{attrs:{id:"install-teiid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-teiid"}},[t._v("#")]),t._v(" Install Teiid")]),t._v(" "),a("p",[t._v("Download the latest version 16.0.0 of Teiid from "),a("a",{attrs:{href:"https://teiid.io/teiid_wildfly/downloads/",target:"_blank",rel:"noopener"}},[t._v("https://teiid.io/teiid_wildfly/downloads/"),a("OutboundLink")],1),t._v(" (choosing Teiid with WildFly/Console, by this way, we do not to install WildFly anymore). Unzip it to a directory, which is denoted as $TEIID-DIR below.")]),t._v(" "),a("p",[t._v("Configure the environment variable 'JBOSS_HOME' of WildFly:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("export JBOSS_HOME=$TEIID_DIR\nexport PATH=$PATH:$JBOSS_HOME/bin\n")])])]),a("p",[t._v("Then start 'WildFly' by executing the following commands:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(" ~ cd $TEIID_DIR/bin/\n ~ bin ./standalone.sh\n")])])]),a("p",[t._v("And access "),a("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8080/"),a("OutboundLink")],1),t._v(" through your browser. If you see the following Welcome page then 'WildFly' has been installed successfully.")]),t._v(" "),a("p",[a("img",{attrs:{src:"tutorial/.././img/WildFly.png",alt:"Image text"}})]),t._v(" "),a("p",[t._v("After 'WildFly' has been isntalled, Teiid standalone mode can be started by executing the commands below:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~ cd $TEIID_DIR/bin/\n~ bin ./standalone.sh  -c=standalone-teiid.xml\n")])])]),a("p",[t._v("Run 'add-user.sh' (in the directory $TEIID_DIR/bin/) and follow the introduction to respectively add 'Management User' and 'Application User'. 'Management User' is used to administrate your data sources and VDBs via web Console, and 'Application User' is used to connect Teiid Server.")]),t._v(" "),a("h3",{attrs:{id:"configure-data-sources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-data-sources"}},[t._v("#")]),t._v(" Configure data sources")]),t._v(" "),a("p",[t._v("Before building and deploying VDBs of Teiid, we first need to configure the data sources needed to be integerated. First, start Teiid.")]),t._v(" "),a("h4",{attrs:{id:"deploy-the-drivers-of-the-data-sources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-the-drivers-of-the-data-sources"}},[t._v("#")]),t._v(" Deploy the drivers of the data sources")]),t._v(" "),a("p",[t._v("Access "),a("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8080/"),a("OutboundLink")],1),t._v(" through your browser. Click 'Adminitration Console' and login with the management user account you have created. Then do the following steps:")]),t._v(" "),a("ul",[a("li",[t._v("Click 'Deployments'")]),t._v(" "),a("li",[t._v("Click 'Add'")]),t._v(" "),a("li",[t._v("Upload the jdbc driver of MySQL, i.e., mysql-connector-java-8.0.21.jar")]),t._v(" "),a("li",[t._v("Click 'Next'")]),t._v(" "),a("li",[t._v("Click 'Fnish'")])]),t._v(" "),a("p",[a("img",{attrs:{src:"tutorial/.././img/deployDriver.png",alt:"Image text"}})]),t._v(" "),a("p",[t._v("Then deploy the driver of PostgreSQL, i.e., postgresql-42.2.19.jar, in the same way")]),t._v(" "),a("h4",{attrs:{id:"configure-the-data-sources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-the-data-sources"}},[t._v("#")]),t._v(" Configure the data sources")]),t._v(" "),a("p",[t._v("Configure the DB "),a("em",[t._v("uni1")]),t._v(" of MySQL via the 'Web Console' by the following steps:")]),t._v(" "),a("ul",[a("li",[t._v("Click 'Configuration'")]),t._v(" "),a("li",[t._v("Click 'Subsystems'")]),t._v(" "),a("li",[t._v("Click 'Datasources'")]),t._v(" "),a("li",[t._v("Click 'Non-XA'")]),t._v(" "),a("li",[t._v("Click 'Add'")]),t._v(" "),a("li",[t._v("Choose the type of the 'Datasources', i.e., MySQL")]),t._v(" "),a("li",[t._v("Click 'Next'")]),t._v(" "),a("li",[t._v("Input the Name and JNDI Name of the datasource and click 'Next'.\n"),a("strong",[t._v("Please record the name and JNDI name you inout for the source, since they will be used when build VDBs of Teiid")])]),t._v(" "),a("li",[t._v("Choose the driver of the datasource and click 'Next'")]),t._v(" "),a("li",[t._v("Input the connection URL, user name and password of the datasource and click 'Next'")]),t._v(" "),a("li",[t._v("Test the connection of the data source and click 'Next' if the connect is sucessful")]),t._v(" "),a("li",[t._v("Click 'Finish'")])]),t._v(" "),a("p",[a("img",{attrs:{src:"tutorial/.././img/configMySQLDB.png",alt:"Image text"}})]),t._v(" "),a("p",[t._v("And configure the DB "),a("em",[t._v("uni2")]),t._v(" of PostgreSQL in the same way.")]),t._v(" "),a("h4",{attrs:{id:"build-and-deploy-vdbs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-and-deploy-vdbs"}},[t._v("#")]),t._v(" Build and Deploy VDBs")]),t._v(" "),a("p",[t._v("Create a virtual database (VDB) of Teiid that integartes the MySQL DB "),a("em",[t._v("uni1")]),t._v(" and PostgreSQL DB "),a("em",[t._v("uni2")]),t._v(" (the file 'UniversityDBs-vdb.xml' in 'ontop-website/.vuepress/public/tutorial/federation/teiid/data/').")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<vdb name="UniversityDBs"  version="1">\n    <model visible="true" name="uni1">\n        <source name="uni1" translator-name="mysql5" connection-jndi-name="java:/MySqlUni1"/>\n        <metadata type="DDL"><![CDATA[\n                CREATE FOREIGN TABLE student (\n                  s_id  integer not null primary key,\n                  first_name varchar(40) not null,\n                  last_name varchar(40) not null\n                  )OPTIONS(UPDATABLE \'FALSE\');\n                  \n                CREATE FOREIGN TABLE academic (\n                  a_id integer not null primary key,\n                  first_name varchar(40) not null,\n                  last_name varchar(40) not null,\n                  position integer not null\n                 )OPTIONS(UPDATABLE \'FALSE\');\n                 \n                 CREATE FOREIGN TABLE course (\n                   c_id integer not null primary key,\n                   title varchar(100) not null\n                  )OPTIONS(UPDATABLE \'FALSE\');\n                  \n                CREATE FOREIGN TABLE teaching (\n                 c_id integer not null,\n                 a_id integer not null\n                 )OPTIONS(UPDATABLE \'FALSE\');\n                 \n                CREATE FOREIGN TABLE course_registration (\n                  c_id integer not null,\n                  s_id integer not null\n                 )OPTIONS(UPDATABLE \'FALSE\');\n            ]]> </metadata>   \n      </model> \n      <model visible="true" name="uni2">\n        <source name="uni2" translator-name="postgresql" connection-jndi-name="java:/PostgresUni2"/>\n        <metadata type="DDL"><![CDATA[\n                CREATE FOREIGN TABLE person (\n                  pid integer not null primary key,\n                  fname varchar(40) not null,\n                  lname varchar(40) not null,\n                  status integer not null,\n                  ssn varchar(40) not null unique\n                 )OPTIONS(UPDATABLE \'FALSE\');\n                 \n             CREATE FOREIGN TABLE course (\n              cid integer not null primary key,\n              lecturer integer not null,\n              lab_teacher integer not null,\n              topic varchar(100) not null\n               )OPTIONS(UPDATABLE \'FALSE\');\n               \n             CREATE FOREIGN TABLE registration (\n              pid integer not null,\n              cid integer not null\n              )OPTIONS(UPDATABLE \'FALSE\');\n            ]]> </metadata>                \n    </model>    \n  </vdb>\n')])])]),a("p",[t._v('Here, "UniversityDBs" is the name of this VDB. The title of this file should be UniversityDBs-vdb.xml. Note that the values of '),a("em",[t._v("connection-jdni-names")]),t._v(" must be the names used when configure the corresponding data sources. Here, the forgign tables described by DDL are the schemas of the tables in the DB uni1 and the DB uni2. See http://teiid.github.io/teiid-documents/16.0.x/content/reference/as_virtual-databases.html for more information on how to develop VDBs of Teiid.")]),t._v(" "),a("p",[t._v("Then deploy the VDB "),a("em",[t._v("UniversityDBs-vdb.xml")]),t._v(" through the 'Web Console' by the following steps:")]),t._v(" "),a("ul",[a("li",[t._v("Click 'Deployments'")]),t._v(" "),a("li",[t._v("Click 'Add'")]),t._v(" "),a("li",[t._v("Upload the VDB file")]),t._v(" "),a("li",[t._v("Click 'Next' to varify your VDB")]),t._v(" "),a("li",[t._v("Click 'Finish'")])]),t._v(" "),a("p",[a("img",{attrs:{src:"tutorial/.././img/deployVDB.png",alt:"Image text"}})]),t._v(" "),a("p",[t._v("By the following steps to see whether the VDB has been deployed successfully:")]),t._v(" "),a("ul",[a("li",[t._v("Click 'Runtime'")]),t._v(" "),a("li",[t._v("Click 'Standalone Server'")]),t._v(" "),a("li",[t._v("Click 'Subsystems'")]),t._v(" "),a("li",[t._v("Choose 'Teiid' and click 'View':")])]),t._v(" "),a("p",[a("img",{attrs:{src:"tutorial/.././img/checkVDB.png",alt:"Image text"}})]),t._v(" "),a("p",[t._v("If the 'Statues' of the VDB is 'ACTIVE' then the VDB has been successfully deployed.")]),t._v(" "),a("h3",{attrs:{id:"configure-ontop-protege-to-use-the-vdb-of-teiid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-ontop-protege-to-use-the-vdb-of-teiid"}},[t._v("#")]),t._v(" Configure Ontop-protege to use the VDB of Teiid")]),t._v(" "),a("p",[t._v("Download the JDBC Driver of Teiid from  "),a("a",{attrs:{href:"https://teiid.io/teiid_wildfly/downloads/",target:"_blank",rel:"noopener"}},[t._v("https://teiid.io/teiid_wildfly/downloads/"),a("OutboundLink")],1),t._v(", and put it in a directory. Suppose the path is '$Dir/teiid-16.0.0-jdbc.jar'.")]),t._v(" "),a("p",[t._v("Install the Teiid JDBC driver. Within Protege， clike 'File', 'Reference', 'JDBC Drivers' and 'Add' in turn:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(". Description: Teiid  \n. Class name: org.teiid.jdbc.TeiidDriver \n. Driver File (jar): browse to `$Dir/teiid-16.0.0-jdbc.jar` \n")])])]),a("p",[t._v("For the connection, in your Datasource manager, use:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(". Connection url: jdbc:teiid:UniversityDBs@mm://localhost:31000 \n. Database Username: $var1 \n. Database Password: $var2  \n. Driver class: org.teiid.jdbc.TeiidDriver\n")])])]),a("p",[t._v("Here, '"),a("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[a("svg",{staticStyle:{"vertical-align":"-0.05ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"9.925ex",height:"1.767ex",viewBox:"0 -759 4386.9 781"}},[a("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[a("g",{attrs:{"data-mml-node":"math"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{attrs:{"data-c":"56",d:"M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(769, 0)"}},[a("path",{attrs:{"data-c":"61",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(1298, 0)"}},[a("path",{attrs:{"data-c":"72",d:"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"msup",transform:"translate(1749, 0)"}},[a("g",{attrs:{"data-mml-node":"mn"}},[a("path",{attrs:{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(500, 363) scale(0.707)"}},[a("path",{attrs:{"data-c":"2032",d:"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"}})])]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(2493.5, 0)"}},[a("path",{attrs:{"data-c":"61",d:"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"}})]),a("g",{attrs:{"data-mml-node":"mi",transform:"translate(3022.5, 0)"}},[a("path",{attrs:{"data-c":"6E",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"}})]),a("g",{attrs:{"data-mml-node":"msup",transform:"translate(3622.5, 0)"}},[a("g",{attrs:{"data-mml-node":"mi"}},[a("path",{attrs:{"data-c":"64",d:"M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"}})]),a("g",{attrs:{"data-mml-node":"mo",transform:"translate(520, 363) scale(0.707)"}},[a("path",{attrs:{"data-c":"2032",d:"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z"}})])])])])])]),t._v("Var2' are respecrively the user name and passord of your 'Application User' created before.")],1),t._v(" "),a("h3",{attrs:{id:"create-the-ontology-and-mapping-and-try-some-sparql-queries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-ontology-and-mapping-and-try-some-sparql-queries"}},[t._v("#")]),t._v(" Create the ontology and mapping and try some SPARQL queries")]),t._v(" "),a("p",[t._v("You can directly use the files 'university.ttl', 'university.obda' and 'teiid.properties' (in 'ontop-website/.vuepress/public/tutorial/federation/teiid/data/') we have prepared.")]),t._v(" "),a("p",[t._v("Setup a SPARQL endpoint with Command Line Interface (CLI).")]),t._v(" "),a("p",[t._v("Configure Ontop CLI by adding the Teiid JDBC driver:")]),t._v(" "),a("div",{staticClass:"language-console extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cp $Dir/teiid-16.0.0-jdbc.jar\n<OntopInstallationPath>/jdbc\n")])])]),a("p",[t._v("Run the Ontop CLI:")]),t._v(" "),a("div",{staticClass:"language-console extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("ontop endpoint -t university.ttl -m university.obda -p teiid.properties --cors-allowed-origins='*'\n")])])]),a("p",[t._v("Access the SPARQL endpoint. Open "),a("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8080/"),a("OutboundLink")],1),t._v(", and run an example SPARQL query ''asking for the courses that are teached at both university1 and university as well as the lectures of such courses in university2':")]),t._v(" "),a("div",{staticClass:"language-sparql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sparql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PREFIX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("http://example.org/voc#"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PREFIX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[t._v("rdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("http://www.w3.org/1999/02/22-rdf-syntax-ns#"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PREFIX")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[t._v("foaf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("http://xmlns.com/foaf/0.1/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?y")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?e")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[t._v("rdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("type")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("Course")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("title")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?y")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("isGivenAt")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("http://example.org/voc#uni1/university"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[t._v("rdf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("type")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("Course")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("title")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?y")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?z")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("isGivenAt")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token url"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("http://example.org/voc#uni2/university"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?e")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[a("span",{pre:!0,attrs:{class:"token prefix"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")])]),a("span",{pre:!0,attrs:{class:"token local-name"}},[t._v("givesLecture")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("?z")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("you can obtain the following certain answers which are generated by extracting and merging the data obatined from uni1 and uni2:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[x z y e]\n[x/<http://example.org/voc#uni1/course/1602>,z/<http://example.org/voc#uni2/course/1>,y/"Information security",e/<http://example.org/voc#uni2/person/1>]\n[x/<http://example.org/voc#uni1/course/1601>,z/<http://example.org/voc#uni2/course/6>,y/"Intelligent Systems",e/<http://example.org/voc#uni2/person/7>]\n')])])])])}),[],!1,null,null,null);e.default=n.exports}}]);