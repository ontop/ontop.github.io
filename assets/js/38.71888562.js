(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{414:function(t,e,s){"use strict";s.r(e);var a=s(51),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"google-bigquery"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#google-bigquery"}},[t._v("#")]),t._v(" Google BigQuery")]),t._v(" "),s("p",[s("em",[t._v("Supported since 5.0.2.")])]),t._v(" "),s("p",[t._v("Through the "),s("a",{attrs:{href:"https://cloud.google.com/bigquery",target:"_blank",rel:"noopener"}},[t._v("BigQuery"),s("OutboundLink")],1),t._v(" connector, Ontop is able to construct VKGs on cloud-based Google BigQuery databases using the "),s("a",{attrs:{href:"https://cloud.google.com/bigquery/docs/reference/odbc-jdbc-drivers",target:"_blank",rel:"noopener"}},[t._v("Simba BigQuery JDBC Driver"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"limitations-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limitations-exceptions"}},[t._v("#")]),t._v(" Limitations & Exceptions")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Integrity constraint information is a recent feature in BigQuery. Beware that the majority of tables in BigQuery are still not providing this kind of information. Make sure to provide missing integrity constraint information in order to avoid very inefficient queries.\nWe recommend using "),s("a",{attrs:{href:"/guide/advanced/lenses"}},[t._v("lenses")]),t._v(" for this purpose.")])]),t._v(" "),s("ul",[s("li",[t._v("String literals have to be encased in "),s("em",[t._v("single quotes")]),t._v(" ("),s("code",[t._v("'")]),t._v("). Double quote string literals ("),s("code",[t._v('"')]),t._v(") are not supported.")]),t._v(" "),s("li",[t._v("The position counter in the "),s("a",{attrs:{href:"/guide/advanced/lenses#flattenlens"}},[t._v("flatten lens")]),t._v(" starts counting at 0 instead of 1 for BigQuery.")]),t._v(" "),s("li",[t._v('Accessing struct fields with the "dot operator" is not supported (see below).')]),t._v(" "),s("li",[t._v("In BigQuery, columns of the type "),s("code",[t._v("ARRAY<ARRAY<T>>")]),t._v(" are not supported. Use "),s("code",[t._v("ARRAY<STRUCT<ARRAY<T>>>")]),t._v(" instead.")]),t._v(" "),s("li",[t._v("The Ontop option "),s("code",[t._v("ontop.exposeSystemTables")]),t._v(" is not supported for BigQuery, as the JBDC does not allow us to access system tables.")])]),t._v(" "),s("h2",{attrs:{id:"database-connection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#database-connection"}},[t._v("#")]),t._v(" Database Connection")]),t._v(" "),s("p",[t._v("The following shows the content of a sample "),s("code",[t._v(".properties")]),t._v(" file that can be used to connect Ontop to BigQuery:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jdbc.url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jdbc:bigquery://dummydomain.com:443"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ProjectId")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dummyproject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("OAuthType")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\njdbc.property.OAuthServiceAcctEmail "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" service.account@dummydomain.com\njdbc.property.OAuthPvtKey "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" paht/to/private/key/file.json\njdbc.driver "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" com.simba.googlebigquery.jdbc.Driver\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("The Google BigQuery JDBC supports different types of authentication methods. The above "),s("code",[t._v(".property")]),t._v(" file corresponds to the "),s("em",[t._v("OAuthType 0: Service Account")]),t._v(" method, which involves creating a service account for BigQuery and downloading its private key from the web interface. However, any other authentication method can be used with Ontop as well.")])]),t._v(" "),s("h2",{attrs:{id:"nested-type-support"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nested-type-support"}},[t._v("#")]),t._v(" Nested Type Support")]),t._v(" "),s("p",[t._v("Ontop implements explicit compatibility with the "),s("code",[t._v("ARRAY<T>")]),t._v(" type. When used with the "),s("a",{attrs:{href:"/guide/advanced/lenses#flattenlens"}},[t._v("flatten lens")]),t._v(", it is able to automatically infer the type of the result column.")]),t._v(" "),s("p",[t._v("The flatten lens cannot be used on arrays stored as JSON columns in the database. For such use cases, the column first has to be converted to an array type.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("The position counter starts counting at 0 instead of 1 for BigQuery.")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v('In BigQuery, columns cannot directly be "arrays of arrays". To represent a two-dimensional array, the type '),s("code",[t._v("ARRAY<STRUCT<ARRAY<T>>>")]),t._v(" has to be used instead of just "),s("code",[t._v("ARRAY<ARRAY<T>>")])])]),t._v(" "),s("h3",{attrs:{id:"struct-access"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#struct-access"}},[t._v("#")]),t._v(" Struct Access")]),t._v(" "),s("p",[t._v('In BigQuery, individual struct objects can be accessed by SQL expressions using the "dot operator" on the struct column. In Ontop, this feature is not currently supported.')]),t._v(" "),s("p",[t._v("Should any of their elements still be required, then a workaround can be performed by first transforming the struct into a JSON object and then accessing it using JSON functions.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("p",[s("code",[t._v("my_struct.my_attribute")]),t._v(" "),s("mjx-container",{staticClass:"MathJax",attrs:{jax:"SVG"}},[s("svg",{staticStyle:{"vertical-align":"-0.025ex"},attrs:{xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",viewBox:"0 -511 1000 522"}},[s("g",{attrs:{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"matrix(1 0 0 -1 0 0)"}},[s("g",{attrs:{"data-mml-node":"math"}},[s("g",{attrs:{"data-mml-node":"mo"}},[s("path",{attrs:{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"}})])])])])]),t._v(" "),s("code",[t._v("JSON_VALUE(TO_JSON(my_struct), '$.my_attribute')")])],1)])}),[],!1,null,null,null);e.default=o.exports}}]);