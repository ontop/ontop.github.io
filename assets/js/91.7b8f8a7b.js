(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{466:function(t,e,a){"use strict";a.r(e);var s=a(51),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"database-and-ontop-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#database-and-ontop-setup"}},[t._v("#")]),t._v(" Database and Ontop Setup")]),t._v(" "),a("p",[t._v("In this tutorial, we run a "),a("a",{attrs:{href:"duckdb.org"}},[a("em",[t._v("DuckDB")])]),t._v(" database of museums that includes information about the museums themselves, their employees and their exhibits.")]),t._v(" "),a("h2",{attrs:{id:"database-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#database-setup"}},[t._v("#")]),t._v(" Database setup")]),t._v(" "),a("p",[t._v("Procedure to set up the datebase for the following exercises:")]),t._v(" "),a("ol",[a("li",[t._v("Unzip the archive of DuckDB "),a("a",{attrs:{href:"../duckdb.zip"}},[a("em",[t._v("(duckdb.zip)")])]),t._v(".")]),t._v(" "),a("li",[t._v("That's it! The "),a("em",[t._v("data")]),t._v(" directory contains the already prepared databases, compatible with "),a("em",[t._v("DuckDB version 0.7.1")]),t._v(".\n"),a("ul",[a("li",[t._v("If you want to have a first look at the database, you can open it with the DuckDB client application that can be downloaded from the "),a("a",{attrs:{href:"https://duckdb.org/#quickinstall",target:"_blank",rel:"noopener"}},[t._v("official site"),a("OutboundLink")],1),t._v(".")])])])]),t._v(" "),a("h2",{attrs:{id:"ontop-sparql-endpoint-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ontop-sparql-endpoint-setup"}},[t._v("#")]),t._v(" Ontop SPARQL endpoint setup")]),t._v(" "),a("p",[t._v("For this tutorial, we use a SPARQL endpoint provided by ontop to test our mappings and lenses. Here, we walk through the preparation of the endpoint via "),a("em",[t._v("Ontop CLI")]),t._v(", but a docker-image-based endpoint can be created in a similar fashion, as explained in the "),a("RouterLink",{attrs:{to:"/tutorial/endpoint/endpoint-docker.html"}},[t._v("endpoint tutorial")]),t._v(".")],1),t._v(" "),a("ol",[a("li",[t._v("Download "),a("a",{attrs:{href:"https://github.com/ontop/ontop/releases",target:"_blank",rel:"noopener"}},[t._v("Ontop CLI"),a("OutboundLink")],1),t._v(" and unzip it to a directory, which is denoted as "),a("code",[t._v("$ONTOP_CLI_DIR")]),t._v(" below.")]),t._v(" "),a("li",[t._v("Copy the DuckDB jdbc driver to "),a("code",[t._v("$ONTOP_CLI_DIR/jdbc")]),t._v(" from the "),a("em",[t._v("duckdb.zip")]),t._v(" archive.")]),t._v(" "),a("li",[t._v("Copy the directory "),a("code",[t._v("data")]),t._v(" containing the database file "),a("code",[t._v("data/tutorial.db")]),t._v(" into "),a("code",[t._v("$ONTOP_CLI_DIR")]),t._v(".")]),t._v(" "),a("li",[t._v("Paste your "),a("em",[t._v("mapping")]),t._v(" and "),a("em",[t._v("lenses")]),t._v(" files, as well as the "),a("em",[t._v("ontology")]),t._v(" and "),a("em",[t._v("properties")]),t._v(" files into a new directory called "),a("code",[t._v("input")]),t._v(" inside of "),a("code",[t._v("$ONTOP_CLI")]),t._v(".\n"),a("ul",[a("li",[t._v("You will create the "),a("em",[t._v("mapping")]),t._v(" and "),a("em",[t._v("lenses")]),t._v(" files throughout the course of this tutorial. Alternatively, the "),a("em",[t._v("duckdb.zip")]),t._v(" archive contains one directory for each of the lens tutorials, with sample mappings and lenses already pre-made.")]),t._v(" "),a("li",[t._v("The "),a("em",[t._v("ontology")]),t._v(" and "),a("em",[t._v("properties")]),t._v(" files will be the same throughout all tutorials. They are already provided in the "),a("em",[t._v("duckdb.zip")]),t._v(" archive.")])])]),t._v(" "),a("li",[t._v("Start the Ontop endpoint. On Mac/Linux:")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ONTOP_CLI_DIR")]),t._v("/ontop endpoint "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --ontology"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("input/ontology.ttl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --mapping"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("input/mapping.obda "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --lenses"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("input/lenses.json "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --properties"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("input/duckdb.properties "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --cors-allowed-origins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://yasgui.org "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if needed")]),t._v("\n")])])]),a("p",[t._v("On Windows:")]),t._v(" "),a("div",{staticClass:"language-batch extra-class"},[a("pre",{pre:!0,attrs:{class:"language-batch"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ontop")]),t._v(" endpoint "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[t._v("--ontology")]),t._v("=input/ontology.ttl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[t._v("--mapping")]),t._v("=input/mapping.obda "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[t._v("--lenses")]),t._v("=input/lenses.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[t._v("--properties")]),t._v("=input/duckdb.properties "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token parameter attr-name"}},[t._v("--cors-allowed-origins")]),t._v("=http://yasgui.org ")]),t._v("\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("Open the web interface of the SPARQL endpoint to try some queries:\n"),a("a",{attrs:{href:"http://localhost:8080/",target:"_blank",rel:"noopener"}},[t._v("http://localhost:8080/"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=n.exports}}]);