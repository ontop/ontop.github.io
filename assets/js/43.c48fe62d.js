(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{420:function(t,e,s){"use strict";s.r(e);var a=s(51),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"duckdb"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#duckdb"}},[t._v("#")]),t._v(" DuckDB")]),t._v(" "),s("p",[s("em",[t._v("Supported since 5.0.2.")])]),t._v(" "),s("p",[t._v("Through the "),s("a",{attrs:{href:"https://duckdb.org",target:"_blank",rel:"noopener"}},[t._v("DuckDB"),s("OutboundLink")],1),t._v(" connector, Ontop is able to construct VKGs on DuckDB database files.")]),t._v(" "),s("h2",{attrs:{id:"limitations-exceptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#limitations-exceptions"}},[t._v("#")]),t._v(" Limitations & Exceptions")]),t._v(" "),s("ul",[s("li",[t._v("DuckDB database files prior to version 1.0 are not guaranteed to be compatible with later versions.")]),t._v(" "),s("li",[t._v("Setting a default schema is not supported when connecting to DuckDB.")]),t._v(" "),s("li",[t._v("Nested data types are only supported starting from version 0.7 of DuckDB.")]),t._v(" "),s("li",[t._v('Accessing struct fields using the "dot operator" is not supported.')]),t._v(" "),s("li",[t._v("The Ontop option "),s("code",[t._v("ontop.exposeSystemTables")]),t._v(" is not supported for DuckDB, as the JBDC does not allow us to access system tables.")]),t._v(" "),s("li",[t._v("DuckDB has a very specific "),s("a",{attrs:{href:"https://duckdb.org/faq#how-does-duckdb-handle-concurrency",target:"_blank",rel:"noopener"}},[t._v("concurrency model"),s("OutboundLink")],1),t._v(". In particular, it does not support concurrent multi-process read-write queries.")]),t._v(" "),s("li",[t._v("DuckDB supports integrity constraints, but they tend to "),s("a",{attrs:{href:"https://duckdb.org/docs/guides/performance/indexing",target:"_blank",rel:"noopener"}},[t._v("costly for large tables"),s("OutboundLink")],1),t._v(". Consider instead specifying constraints using lenses for large datasets.")])]),t._v(" "),s("h2",{attrs:{id:"database-connection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#database-connection"}},[t._v("#")]),t._v(" Database Connection")]),t._v(" "),s("p",[t._v("The following shows the content of a sample "),s("code",[t._v(".properties")]),t._v(" file that can be used to connect Ontop to DuckDB:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("jdbc.url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jdbc:duckdb:path/to/database.db\njdbc.driver "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" org.duckdb.DuckDBDriver\n")])])]),s("h2",{attrs:{id:"nested-type-support"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nested-type-support"}},[t._v("#")]),t._v(" Nested Type Support")]),t._v(" "),s("p",[t._v("Ontop implements explicit compatibility with the DuckDB array type "),s("code",[t._v("T[]")]),t._v(". When used with the "),s("a",{attrs:{href:"/guide/advanced/lenses#flattenlens"}},[t._v("flatten lens")]),t._v(", it is able to automatically infer the type of the result column.")]),t._v(" "),s("p",[t._v("The flatten lens cannot be used on arrays stored as JSON-encoded columns in the database. For such use cases, the column first has to be converted to an array type.")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("NOTE")]),t._v(" "),s("p",[t._v("Nested data types are only supported starting from version 0.7 of DuckDB.")])]),t._v(" "),s("h3",{attrs:{id:"struct-access"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#struct-access"}},[t._v("#")]),t._v(" Struct Access")]),t._v(" "),s("p",[t._v("Individual struct objects can be accessed by SQL expressions in the dialect's default way:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("SELECT my_struct['my_attribute'] FROM ...\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v('Accessing struct fields using the "dot operator" is not supported.')])])])}),[],!1,null,null,null);e.default=o.exports}}]);